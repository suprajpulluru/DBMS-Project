--1.Extract starting and ending point of each train
select * 
from (select  train_number,stn_code as start_stn from schedule where arr_time is null) natural join (select  train_number,stn_code as end_Stn from schedule where dep_time is null);

--2.Display train driver name of RAJADHANI at . 
select emp_id,emp_name,start_stn_code,end_stn_code
from current_workers natural join employee
where train_number=(select train_number from train where train_name='RAJADHANI') and designation='TD';

--3.EXTRACT ALL THE TRAINS WHICH ARRIVE AT A GIVEN STATION ALONG WITH THEIR START STATION INFORMATION .
SELECT A.TRAIN_NUMBER,B.STN_CODE AS STARTSTATION,B.DEP_TIME AS DEP_AT_START_STATION,A.ARR_TIME AS ARR_AT_GIVEN_STATION
FROM WEEK_SCHEDULE A , SCHEDULE B
WHERE (A.stn_code=(select station_code from station where station_name='&A')) AND A.TRAIN_NUMBER=B.TRAIN_NUMBER AND B.ARR_TIME IS NULL;

--4.DISPLAY ALL PASSENGERS WHO BOOKED A TICKET FOR GIVEN INPUT TRAIN NAME ON A ON A PARTICULAR DATE
SELECT B.*
FROM PNR A,PASSENGER B
WHERE A.PNR_NUMBER=B.PNR_NUMBER AND A.TRAIN_NUMBER=(SELECT TRAIN_NUMBER FROM TRAIN WHERE TRAIN_NAME='&A') AND A.JDATE='&B';

--5.EXTRACT ALL TRAINS INFO WHICH RUN ON MONDAY AND SUNDAY 
SELECT TRAIN_NUMBER,TRAIN_NAME
FROM TRAIN
WHERE RUNNING_DAYS LIKE '1_____1';

--6.
SELECT DISTANCE*COST*COUNT AS TOTAL_COST
FROM 
(SELECT (MAX(DIST_COVERED)-MIN(DIST_COVERED)) AS DISTANCE
FROM PNR A,PASSENGER B,TRAIN C,TRAIN_DETAILS D,TRAIN_TYPE E,SCHEDULE F
WHERE A.PNR_NUMBER=&P AND A.PNR_NUMBER=B.PNR_NUMBER AND A.TRAIN_NUMBER=C.TRAIN_NUMBER AND C.TRAIN_NAME=E.TRAIN_NAME AND D.TRAIN_TYPE=E.TYPE AND A.TRAIN_NUMBER=F.TRAIN_NUMBER AND (A.START_CODE=F.STN_CODE OR A.END_CODE=F.STN_CODE))
,

(SELECT DISTINCT(CASE
            WHEN A.JCLASS='SL' THEN D.SL_COST_KM
            WHEN A.JCLASS='AC' THEN D.AC_COST_KM
            WHEN A.JCLASS='2S' THEN D.GEN_COST_KM
            END
            ) AS COST
FROM PNR A,PASSENGER B,TRAIN C,TRAIN_DETAILS D,TRAIN_TYPE E,SCHEDULE F
WHERE A.PNR_NUMBER=&P AND A.PNR_NUMBER=B.PNR_NUMBER AND A.TRAIN_NUMBER=C.TRAIN_NUMBER AND C.TRAIN_NAME=E.TRAIN_NAME AND D.TRAIN_TYPE=E.TYPE AND A.TRAIN_NUMBER=F.TRAIN_NUMBER AND (A.START_CODE=F.STN_CODE OR A.END_CODE=F.STN_CODE))
,

(SELECT (COUNT(*)/2) AS COUNT
FROM PNR A,PASSENGER B,TRAIN C,TRAIN_DETAILS D,TRAIN_TYPE E,SCHEDULE F
WHERE A.PNR_NUMBER=&P AND A.PNR_NUMBER=B.PNR_NUMBER AND A.TRAIN_NUMBER=C.TRAIN_NUMBER AND C.TRAIN_NAME=E.TRAIN_NAME AND D.TRAIN_TYPE=E.TYPE AND A.TRAIN_NUMBER=F.TRAIN_NUMBER AND (A.START_CODE=F.STN_CODE OR A.END_CODE=F.STN_CODE));

--7.DISPLAY THE TRAIN NUMBERS OF ALL TRAINS THAT CROSS TWO GIVEN STATIONS IN THEIR PATH OF JOURNEY.
(select train_number AS A
from schedule
where stn_code=(select station_code from station where station_name='&A'))
INTERSECT
(SELECT TRAIN_NUMBER AS B
FROM SCHEDULE 
WHERE STN_CODE=(SELECT STATION_CODE FROM STATION WHERE STATION_NAME='&B'));

--8.Write the details of all the station master and name of the station they handle
SELECT B.EMP_NAME,C.STATION_NAME
FROM STATION_WORKERS A,EMPLOYEE B,STATION C
WHERE A.EMP_ID=B.EMP_ID AND B.DESIGNATION='SM' AND B.STATION_CODE=C.STATION_CODE;

SELECT TRAIN_NUMBER
FROM (select train_number,arr_time as A
      from schedule
      where stn_code='&A') C natural join (select train_number,arr_time as B
                              from schedule
                              where stn_code='&B') D
WHERE (A IS NULL) OR (A < B);